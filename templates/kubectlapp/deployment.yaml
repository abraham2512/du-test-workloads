kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubectlapp-{{.Replica}}
spec:
  template:
    metadata:
      labels:
        name: kubectlapp-{{.Replica}}
        redhat-best-practices-for-k8s.com/generic: target
    spec:
      serviceAccountName: kubectlapp-sa-{{.Replica}}
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      containers:
        - name: kubectlapp
          image: "{{ .Image_kubectl }}"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args:
          - |
            while true; do
              kubectl get pods -n workload
              kubectl get services -n workload
              sleep 1
            done
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
        - name: nginx
          image: "{{ .Image_nginx }}"
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 60
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 60
      restartPolicy: Always
  replicas: 1
  selector:
    matchLabels:
      name: kubectlapp-{{.Replica}}
      redhat-best-practices-for-k8s.com/generic: target
  strategy:
    type: RollingUpdate